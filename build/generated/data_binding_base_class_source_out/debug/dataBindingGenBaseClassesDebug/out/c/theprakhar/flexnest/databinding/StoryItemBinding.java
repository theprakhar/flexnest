// Generated by data binding compiler. Do not edit!
package c.theprakhar.flexnest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import c.theprakhar.flexnest.ItemClickListener;
import c.theprakhar.flexnest.R;
import c.theprakhar.flexnest.models.User;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class StoryItemBinding extends ViewDataBinding {
  @NonNull
  public final CircleImageView dp;

  @NonNull
  public final TextView name;

  @NonNull
  public final LinearLayout storylinear;

  @Bindable
  protected User mItem;

  @Bindable
  protected ItemClickListener mItemClick;

  protected StoryItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CircleImageView dp, TextView name, LinearLayout storylinear) {
    super(_bindingComponent, _root, _localFieldCount);
    this.dp = dp;
    this.name = name;
    this.storylinear = storylinear;
  }

  public abstract void setItem(@Nullable User item);

  @Nullable
  public User getItem() {
    return mItem;
  }

  public abstract void setItemClick(@Nullable ItemClickListener itemClick);

  @Nullable
  public ItemClickListener getItemClick() {
    return mItemClick;
  }

  @NonNull
  public static StoryItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.story_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static StoryItemBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<StoryItemBinding>inflateInternal(inflater, R.layout.story_item, root, attachToRoot, component);
  }

  @NonNull
  public static StoryItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.story_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static StoryItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<StoryItemBinding>inflateInternal(inflater, R.layout.story_item, null, false, component);
  }

  public static StoryItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static StoryItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (StoryItemBinding)bind(component, view, R.layout.story_item);
  }
}
